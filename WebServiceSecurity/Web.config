<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="microsoft.identityModel" type="Microsoft.IdentityModel.Configuration.MicrosoftIdentityModelSection, Microsoft.IdentityModel, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
  </configSections>
  <system.diagnostics configSource="tracing.config" />
  <system.webServer>
    <validation validateIntegratedModeConfiguration="true" />
    <modules runAllManagedModulesForAllRequests="true">
      <add name="ServiceAwareWSFederationAuthenticationModule" type="Thinktecture.IdentityModel.Web.ServiceAwareWSFederationAuthenticationModule" />
      <add name="SessionAuthenticationModule" type="Microsoft.IdentityModel.Web.SessionAuthenticationModule, Microsoft.IdentityModel, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
    </modules>
  </system.webServer>
  <system.serviceModel>
    <services>
      <service name="Thinktecture.Samples.SoapService" behaviorConfiguration="soap">
        <!-- Windows authentication -->
        <endpoint address="windows" binding="ws2007HttpBinding" bindingConfiguration="windows" contract="Thinktecture.Samples.IService" />
        <!-- username/password authentication -->
        <endpoint address="username" binding="ws2007HttpBinding" bindingConfiguration="username" contract="Thinktecture.Samples.IService" />
        <!-- client certificate authentication -->
        <endpoint address="certificate" binding="ws2007HttpBinding" bindingConfiguration="certificate" contract="Thinktecture.Samples.IService" />
        <!-- SAML based authentication via ADFS -->
        <endpoint address="adfs" binding="ws2007FederationHttpBinding" bindingConfiguration="adfs" contract="Thinktecture.Samples.IService" />
        <!-- SAML based authentication via ACS -->
        <endpoint address="acs" binding="ws2007FederationHttpBinding" bindingConfiguration="acs" contract="Thinktecture.Samples.IService" />
        <!-- bearer SAML based authentication via ACS protocol transition -->
        <endpoint address="bearer" binding="ws2007FederationHttpBinding" bindingConfiguration="bearer" contract="Thinktecture.Samples.IService" />
      </service>
    </services>
    <serviceHostingEnvironment aspNetCompatibilityEnabled="true">
      <serviceActivations>
        <add service="Thinktecture.Samples.SoapService" relativeAddress="soap.svc" />
        <add service="Thinktecture.Samples.RestService" relativeAddress="rest.svc" />
      </serviceActivations>
    </serviceHostingEnvironment>
    <bindings>
      <webHttpBinding>
        <binding name="winWebHttpBinding">
          <security mode="Transport">
            <transport clientCredentialType="Windows" />
          </security>
        </binding>
      </webHttpBinding>
      <!-- classic authentication bindings -->
      <ws2007HttpBinding>
        <binding name="windows">
          <security mode="TransportWithMessageCredential">
            <message clientCredentialType="Windows" establishSecurityContext="false" />
          </security>
        </binding>
        <binding name="username">
          <security mode="TransportWithMessageCredential">
            <message clientCredentialType="UserName" establishSecurityContext="false" />
          </security>
        </binding>
        <binding name="certificate">
          <security mode="TransportWithMessageCredential">
            <message clientCredentialType="Certificate" establishSecurityContext="false" />
          </security>
        </binding>
      </ws2007HttpBinding>
      <!-- brokered authentication bindings -->
      <ws2007FederationHttpBinding>
        <binding name="adfs">
          <security mode="TransportWithMessageCredential">
            <message establishSecurityContext="false">
              <issuerMetadata address="https://adfs.leastprivilege.vm/adfs/services/trust/mex" />
            </message>
          </security>
        </binding>
        <binding name="acs">
          <security mode="TransportWithMessageCredential">
            <message establishSecurityContext="false">
              <issuerMetadata address="https://ttacssample.accesscontrol.windows.net/v2/wstrust/mex" />
            </message>
          </security>
        </binding>
        <binding name="bearer">
          <security mode="TransportWithMessageCredential">
            <message establishSecurityContext="false" issuedKeyType="BearerKey">
              <issuerMetadata address="https://ttacssample.accesscontrol.windows.net/v2/wstrust/mex" />
            </message>
          </security>
        </binding>
      </ws2007FederationHttpBinding>
    </bindings>
    <behaviors>
      <!-- shared behavior - WIF is enabled on all "standard" endpoints -->
      <serviceBehaviors>
        <behavior name="soap">
          <serviceMetadata httpsGetEnabled="true" />
          <federatedServiceHostConfiguration />
        </behavior>
        <behavior name="rest">
          <federatedServiceHostConfiguration />
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <extensions>
      <behaviorExtensions>
        <add name="federatedServiceHostConfiguration" type="Microsoft.IdentityModel.Configuration.ConfigureServiceHostBehaviorExtensionElement, Microsoft.IdentityModel, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
      </behaviorExtensions>
    </extensions>
  </system.serviceModel>
  <microsoft.identityModel>
    <service>
      <!-- sample identity transformation -->
      <!--<claimsAuthenticationManager type="Thinktecture.Samples.ClaimsTransformer" />-->
      <!-- sample authorization manager -->
      <!--<claimsAuthorizationManager type="Thinktecture.Samples.AuthorizationManager" />-->
      <securityTokenHandlers>
        <!-- provider custom username/password validation logic -->
        <remove type="Microsoft.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler, Microsoft.IdentityModel, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
        <add type="Thinktecture.Samples.UserNameSecurityTokenHandler, SecurityHelpers" />
        <!-- sample x509 certificate handler with custom validation -->
        <!--<remove type="Microsoft.IdentityModel.Tokens.X509SecurityTokenHandler, Microsoft.IdentityModel, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"/>
        <add type="Microsoft.IdentityModel.Tokens.X509SecurityTokenHandler, Microsoft.IdentityModel, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35">
          <x509SecurityTokenHandlerRequirement certificateValidationMode="Custom"
                                               certificateValidator="Thinktecture.Samples.CustomX509CertificateValidator" />
        </add>-->
      </securityTokenHandlers>
      <!-- trust relationships -->
      <issuerNameRegistry type="Microsoft.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry, Microsoft.IdentityModel, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35">
        <trustedIssuers>
          <!-- trust with specific certificate authority -->
          <add thumbprint="e00d366a6a22bd8415cb854448ab784848be1c71" name="LeastPrivilege CA" />
          <!-- trust with ADFS tokens -->
          <add thumbprint="d1c5b12597d03694651ce264fe48060135f7bddb" name="ADFS" />
          <!-- trust with ACS tokens -->
          <add thumbprint="2077FEEEE28E2A887CF39B4C508D851B6A8534FF" name="ACS" />
        </trustedIssuers>
      </issuerNameRegistry>
      <!-- ws-fed configuration for web app -->
      <federatedAuthentication>
        <wsFederation issuer="https://identity.thinktecture.com/idsrv/issue/wsfed" realm="https://roadie/webservicesecurity/" />
      </federatedAuthentication>
      <!-- decryption of incoming issued tokens -->
      <serviceCertificate>
        <certificateReference findValue="CN=Service" storeLocation="LocalMachine" storeName="My" x509FindType="FindBySubjectDistinguishedName" />
      </serviceCertificate>
      <certificateValidation certificateValidationMode="None" />
      <audienceUris>
        <add value="https://roadie/webservicesecurity/" />
        <add value="https://renovator/webservicesecurity/" />
      </audienceUris>
    </service>
  </microsoft.identityModel>
  <location path="restwin">
    <system.webServer>
      <security>
        <authentication>
          <windowsAuthentication enabled="true" />
          <anonymousAuthentication enabled="false" />
        </authentication>
      </security>
    </system.webServer>
  </location>
  <!--
    For a description of web.config changes see http://go.microsoft.com/fwlink/?LinkId=235367.

    The following attributes can be set on the <httpRuntime> tag.
      <system.Web>
        <httpRuntime targetFramework="4.5.2" />
      </system.Web>
  -->
  <system.web>
    <compilation debug="true" targetFramework="4.5.2" />
    <pages controlRenderingCompatibilityVersion="4.0" />
  </system.web>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-10.0.0.0" newVersion="10.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.IdentityModel.Tokens.Jwt" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.1.4.0" newVersion="5.1.4.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Json" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.0.5.0" newVersion="2.0.5.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
</configuration>